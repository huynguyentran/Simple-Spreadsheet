// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace GUItests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Clicking around
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinWindow uISpreadsheetFormWindow = this.UISpreadsheetFormWindow;
            WinWindow uICellContentBoxWindow = this.UISpreadsheetFormWindow.UISpreadsheetFormClient.UICellContentBoxWindow;
            WinClient uISpreadSheetPanelClient = this.UISpreadsheetFormWindow.UIItemWindow.UISpreadSheetPanelClient;
            WinWindow uIToolStrip1Window = this.UISpreadsheetFormWindow.UISpreadsheetFormClient.UIToolStrip1Window;
            WinWindow uIItemWindow = this.UIItemWindow;
            WinEdit uICellContentBoxEdit = this.UISpreadsheetFormWindow.UICellContentBoxWindow.UICellContentBoxEdit;
            WinMenuItem uIFeaturesMenuItem = this.UISpreadsheetFormWindow.UIMenuToolBar.UIFeaturesMenuItem;
            WinTitleBar uISpreadsheetFormTitleBar = this.UISpreadsheetFormWindow.UISpreadsheetFormTitleBar;
            WinButton uICancelButton = this.UIUnsavedChangesWindow.UICancelWindow.UICancelButton;
            WinWindow uIItemWindow1 = this.UISpreadsheetFormWindow.UISpreadSheetPanelWindow.UIItemWindow;
            #endregion

            // Click 'SpreadsheetForm' window
            Mouse.Click(uISpreadsheetFormWindow, new Point(1225, 58));

            // Click 'cellContentBox' window
            Mouse.Click(uICellContentBoxWindow, new Point(130, 24));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(260, 110));

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(624, 290));
            Mouse.StopDragging(uISpreadSheetPanelClient, 9, 0);

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(818, 250));

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(559, 238));
            Mouse.StopDragging(uISpreadSheetPanelClient, -7, 15);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(520, 444));
            Mouse.StopDragging(uISpreadSheetPanelClient, 28, 6);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(899, 474));
            Mouse.StopDragging(uISpreadSheetPanelClient, 55, -26);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1044, 258));
            Mouse.StopDragging(uISpreadSheetPanelClient, -12, -7);

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(731, 196));

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(463, 651));
            Mouse.StopDragging(uISpreadSheetPanelClient, 43, 91);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(730, 819));
            Mouse.StopDragging(uISpreadSheetPanelClient, 76, -36);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1060, 529));
            Mouse.StopDragging(uISpreadSheetPanelClient, -158, -100);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(633, 357));
            Mouse.StopDragging(uISpreadSheetPanelClient, 63, 47);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1092, 489));
            Mouse.StopDragging(uISpreadSheetPanelClient, 4, -22);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(711, 232));
            Mouse.StopDragging(uISpreadSheetPanelClient, -6, 3);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(712, 398));
            Mouse.StopDragging(uISpreadSheetPanelClient, 120, 57);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1123, 426));
            Mouse.StopDragging(uISpreadSheetPanelClient, -5, -15);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(745, 237));
            Mouse.StopDragging(uISpreadSheetPanelClient, -12, 40);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(918, 551));
            Mouse.StopDragging(uISpreadSheetPanelClient, 179, -22);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1313, 385));
            Mouse.StopDragging(uISpreadSheetPanelClient, -135, -69);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(912, 323));
            Mouse.StopDragging(uISpreadSheetPanelClient, -30, 38);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(962, 341));
            Mouse.StopDragging(uISpreadSheetPanelClient, -55, -79);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(534, 189));
            Mouse.StopDragging(uISpreadSheetPanelClient, 140, 87);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1131, 341));
            Mouse.StopDragging(uISpreadSheetPanelClient, -24, -80);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(756, 359));
            Mouse.StopDragging(uISpreadSheetPanelClient, 137, 73);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1208, 402));
            Mouse.StopDragging(uISpreadSheetPanelClient, -146, -119);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(571, 274));
            Mouse.StopDragging(uISpreadSheetPanelClient, 94, 54);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(1075, 318));
            Mouse.StopDragging(uISpreadSheetPanelClient, -20, -19);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(642, 209));
            Mouse.StopDragging(uISpreadSheetPanelClient, 73, 59);

            // Move 'spreadSheetPanel' client
            Mouse.StartDragging(uISpreadSheetPanelClient, new Point(913, 346));
            Mouse.StopDragging(uISpreadSheetPanelClient, 57, 9);

            // Click 'cellContentBox' window
            Mouse.Click(uICellContentBoxWindow, new Point(210, 19));

            // Click 'toolStrip1' window
            Mouse.Click(uIToolStrip1Window, new Point(163, 26));

            // Click window
            Mouse.Click(uIItemWindow, new Point(90, 76));

            // Click 'toolStrip1' window
            Mouse.Click(uIToolStrip1Window, new Point(289, 37));

            // Click window
            Mouse.Click(uIItemWindow, new Point(199, 86));

            // Click 'SpreadsheetForm' window
            Mouse.Click(uISpreadsheetFormWindow, new Point(1365, 31));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(125, 124));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(332, 93));

            // Click 'cellContentBox' window
            Mouse.Click(uICellContentBoxWindow, new Point(200, 19));

            // Type 'asdko' in 'cellContentBox' text box
            uICellContentBoxEdit.Text = this.RecordedMethod1Params.UICellContentBoxEditText;

            // Type '{Enter}' in 'cellContentBox' text box
            Keyboard.SendKeys(uICellContentBoxEdit, this.RecordedMethod1Params.UICellContentBoxEditSendKeys, ModifierKeys.None);

            // Click 'Features' menu item
            Mouse.Click(uIFeaturesMenuItem, new Point(42, 16));

            // Last mouse action was not recorded.

            // Last mouse action was not recorded.

            // Click 'SpreadsheetForm' title bar
            Mouse.Click(uISpreadsheetFormTitleBar, new Point(707, 5));

            // Click 'SpreadsheetForm' title bar
            Mouse.Click(uISpreadsheetFormTitleBar, new Point(126, 27));

            // Click 'Features' menu item
            Mouse.Click(uIFeaturesMenuItem, new Point(63, 11));

            // Click window
            Mouse.Click(uIItemWindow, new Point(87, 91));

            // Click 'SpreadsheetForm' window
            Mouse.Click(uISpreadsheetFormWindow, new Point(2547, 18));

            // Click 'Cancel' button
            Mouse.Click(uICancelButton, new Point(49, 22));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(1520, 774));

            // Click window
            Mouse.Click(uIItemWindow1, new Point(2224, 522));

            // Move window
            Mouse.StartDragging(uIItemWindow1, new Point(2158, 895));
            Mouse.StopDragging(uIItemWindow1, -5, 2);

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(1573, 880));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(1030, 556));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(648, 314));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(308, 181));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(193, 177));

            // Click 'spreadSheetPanel' client
            Mouse.Click(uISpreadSheetPanelClient, new Point(311, 254));

            // Click 'Features' menu item
            Mouse.Click(uIFeaturesMenuItem, new Point(33, 15));

            // Click window
            Mouse.Click(uIItemWindow, new Point(83, 82));

            // Click 'toolStrip1' window
            Mouse.Click(uIToolStrip1Window, new Point(141, 31));

            // Click window
            Mouse.Click(uIItemWindow, new Point(79, 84));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UISpreadsheetFormWindow UISpreadsheetFormWindow
        {
            get
            {
                if ((this.mUISpreadsheetFormWindow == null))
                {
                    this.mUISpreadsheetFormWindow = new UISpreadsheetFormWindow();
                }
                return this.mUISpreadsheetFormWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIUnsavedChangesWindow UIUnsavedChangesWindow
        {
            get
            {
                if ((this.mUIUnsavedChangesWindow == null))
                {
                    this.mUIUnsavedChangesWindow = new UIUnsavedChangesWindow();
                }
                return this.mUIUnsavedChangesWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UISpreadsheetFormWindow mUISpreadsheetFormWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIUnsavedChangesWindow mUIUnsavedChangesWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'asdko' in 'cellContentBox' text box
        /// </summary>
        public string UICellContentBoxEditText = "asdko";
        
        /// <summary>
        /// Type '{Enter}' in 'cellContentBox' text box
        /// </summary>
        public string UICellContentBoxEditSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UISpreadsheetFormWindow : WinWindow
    {
        
        public UISpreadsheetFormWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SpreadsheetForm";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public UISpreadsheetFormClient UISpreadsheetFormClient
        {
            get
            {
                if ((this.mUISpreadsheetFormClient == null))
                {
                    this.mUISpreadsheetFormClient = new UISpreadsheetFormClient(this);
                }
                return this.mUISpreadsheetFormClient;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UICellContentBoxWindow UICellContentBoxWindow
        {
            get
            {
                if ((this.mUICellContentBoxWindow == null))
                {
                    this.mUICellContentBoxWindow = new UICellContentBoxWindow(this);
                }
                return this.mUICellContentBoxWindow;
            }
        }
        
        public UIMenuToolBar UIMenuToolBar
        {
            get
            {
                if ((this.mUIMenuToolBar == null))
                {
                    this.mUIMenuToolBar = new UIMenuToolBar(this);
                }
                return this.mUIMenuToolBar;
            }
        }
        
        public WinTitleBar UISpreadsheetFormTitleBar
        {
            get
            {
                if ((this.mUISpreadsheetFormTitleBar == null))
                {
                    this.mUISpreadsheetFormTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUISpreadsheetFormTitleBar.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUISpreadsheetFormTitleBar;
            }
        }
        
        public UISpreadSheetPanelWindow UISpreadSheetPanelWindow
        {
            get
            {
                if ((this.mUISpreadSheetPanelWindow == null))
                {
                    this.mUISpreadSheetPanelWindow = new UISpreadSheetPanelWindow(this);
                }
                return this.mUISpreadSheetPanelWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISpreadsheetFormClient mUISpreadsheetFormClient;
        
        private UIItemWindow mUIItemWindow;
        
        private UICellContentBoxWindow mUICellContentBoxWindow;
        
        private UIMenuToolBar mUIMenuToolBar;
        
        private WinTitleBar mUISpreadsheetFormTitleBar;
        
        private UISpreadSheetPanelWindow mUISpreadSheetPanelWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UISpreadsheetFormClient : WinClient
    {
        
        public UISpreadsheetFormClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "SpreadsheetForm";
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public WinWindow UICellContentBoxWindow
        {
            get
            {
                if ((this.mUICellContentBoxWindow == null))
                {
                    this.mUICellContentBoxWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUICellContentBoxWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUICellContentBoxWindow.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUICellContentBoxWindow;
            }
        }
        
        public WinWindow UIToolStrip1Window
        {
            get
            {
                if ((this.mUIToolStrip1Window == null))
                {
                    this.mUIToolStrip1Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIToolStrip1Window.SearchProperties[WinWindow.PropertyNames.Name] = "toolStrip1";
                    this.mUIToolStrip1Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIToolStrip1Window.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUIToolStrip1Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUICellContentBoxWindow;
        
        private WinWindow mUIToolStrip1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "3";
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public WinClient UISpreadSheetPanelClient
        {
            get
            {
                if ((this.mUISpreadSheetPanelClient == null))
                {
                    this.mUISpreadSheetPanelClient = new WinClient(this);
                    #region Search Criteria
                    this.mUISpreadSheetPanelClient.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUISpreadSheetPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUISpreadSheetPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UICellContentBoxWindow : WinWindow
    {
        
        public UICellContentBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cellContentBox";
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public WinEdit UICellContentBoxEdit
        {
            get
            {
                if ((this.mUICellContentBoxEdit == null))
                {
                    this.mUICellContentBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICellContentBoxEdit.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUICellContentBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUICellContentBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIMenuToolBar : WinToolBar
    {
        
        public UIMenuToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "toolStrip1";
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIFeaturesMenuItem
        {
            get
            {
                if ((this.mUIFeaturesMenuItem == null))
                {
                    this.mUIFeaturesMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIFeaturesMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Features";
                    this.mUIFeaturesMenuItem.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUIFeaturesMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIFeaturesMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UISpreadSheetPanelWindow : WinWindow
    {
        
        public UISpreadSheetPanelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "spreadSheetPanel";
            this.WindowTitles.Add("SpreadsheetForm");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemWindow.WindowTitles.Add("SpreadsheetForm");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "FeaturesDropDown";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UIUnsavedChangesWindow : WinWindow
    {
        
        public UIUnsavedChangesWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Unsaved Changes";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Unsaved Changes");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.29514.35")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Unsaved Changes");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Unsaved Changes");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
}
